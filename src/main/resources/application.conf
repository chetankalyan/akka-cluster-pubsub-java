akka {

  actor.provider = "akka.cluster.ClusterActorRefProvider"

  remote.netty.tcp.port=0

  extensions=["akka.contrib.pattern.DistributedPubSubExtension"]
}

# Settings for the DistributedPubSubExtension
akka.contrib.cluster.pub-sub {
  # Actor name of the mediator actor, /user/distributedPubSubMediator
  name = distributedPubSubMediator

  # Start the mediator on members tagged with this role.
  # All members are used if undefined or empty.
  role = ""

  # The routing logic to use for 'Send'
  # Possible values: random, round-robin, broadcast
  routing-logic = random

  # How often the DistributedPubSubMediator should send out gossip information
  gossip-interval = 5s

  # Removed entries are pruned after this duration
  removed-time-to-live = 10s

  # Maximum number of elements to transfer in one message when synchronizing the registries.
  # Next chunk will be transferred in next round of gossip.
  max-delta-elements = 3000
}
